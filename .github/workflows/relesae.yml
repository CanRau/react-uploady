name: Uploady Release

on:
    workflow_dispatch:
        branches:
            - "release-**"
        inputs:
           version:
               type: choice
               description: Which version to release?
               required: false
               default: "patch"
               options:
                   - "rc"
                   - "alpha"
                   - "patch"
                   - "minor"
                   - "major"



#permissions:
#    id-token: write
#    contents: write

defaults:
    run:
        shell: bash
        #working-directory:

jobs:
    Release:
        name: Release Uploady
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                node-version: "16.17"
                cache: "yarn"
                #cache-dependency-path: "yarn.lock"

            - name: Install Deps
              run: yarn --frozen-lockfile

            - name: Prepare
              run: yarn bootstrap

            - name: Clean
              run: yarn clean

            - name: Define Lerna Args
              id: lerna-args
              run: |
                  if [ '${{ inputs.version }}' = 'rc' ]
                  then
                    echo "using args for RC release"
                    echo "VERSION=prerelease --preid rc" >> $GITHUB_OUTPUT
                    echo "PUBLISH=--dist-tag next" >> $GITHUB_OUTPUT
                  elif [ '${{ inputs.version }}' = 'alpha' ]
                  then
                    echo "using args for Alpha release"
                    echo "VERSION=prerelease" >> $GITHUB_OUTPUT
                    echo "PUBLISH=--dist-tag alpha" >> $GITHUB_OUTPUT
                  else
                    echo "using args for ${{ inputs.version }} release"
                    echo "VERSION=${{ inputs.version }}" >> $GITHUB_OUTPUT
                  fi
                  echo "## Version ARGS: ${{ steps.lerna-args.outputs.VERSION }} :rocket:" >> $GITHUB_STEP_SUMMARY
                  echo "## PUBLISH ARGS: ${{ steps.lerna-args.outputs.PUBLISH }} :rocket:" >> $GITHUB_STEP_SUMMARY

            - name: Define GIT Author
              run: |
                  git config user.email "$(git log -n 1 --pretty=format:%an)"
                  git config user.name "$(git log -n 1 --pretty=format:%ae)"

            - name: Create Version
              run: lerna version ${{ steps.lerna-args.outputs.VERSION }} --force-publish=* --yes

#    - name: Authenticate with Registry
#          run: echo "registry=//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
#          env:
#              NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
